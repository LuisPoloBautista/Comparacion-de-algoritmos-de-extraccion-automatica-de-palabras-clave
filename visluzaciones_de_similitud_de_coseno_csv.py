# -*- coding: utf-8 -*-
"""Visluzaciones de similitud de coseno csv.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10vCszSQzsSrIE8nVsanY7SGXOvQQPoc9
"""

# Establecer un vinculo con Drive

from google.colab import drive
drive.mount('/content/drive')

# Leer archivo CSV y cargar en dataframe
import pandas as pd
df = pd.read_csv("/content/drive/MyDrive/Comparación de algoritmos de extracción de palabras clave/scopus2.csv", encoding="utf-8")
df.head(3)

!pip install seaborn

import matplotlib.pyplot as plt

# Crea una figura y un eje
fig, ax = plt.subplots()

# Crea una gráfica de barras de la columna de similitud del coseno
ax.bar(df.index, df['similarity_yake'])

# Calcula el promedio de los valores en la columna 'similarity_yake'
promedio = df['similarity_yake'].mean()

# Agrega una línea en el valor del promedio
ax.axhline(y=promedio, color='r', linestyle='-')

# Agrega etiquetas al eje x y al eje y
ax.set_xlabel('Etiquetas Eje X')
ax.set_ylabel('Similitud del Coseno Yake')

# Muestra el gráfico
plt.show()

# Calcula el promedio de los valores en la columna "nombre_de_la_columna"
promedio = df['similarity_yake'].mean()

# Imprime el promedio
print("El promedio es:", promedio)

# Crea una figura y un eje
fig, ax = plt.subplots()

# Crea una gráfica de barras de la columna de similitud del coseno
ax.bar(df.index, df['similarity_KeyBERT'], color='darkkhaki')

# Calcula el promedio de los valores en la columna 'similarity_yake'
promedio = df['similarity_KeyBERT'].mean()

# Agrega una línea en el valor del promedio
ax.axhline(y=promedio, color='r', linestyle='-')

# Agrega etiquetas al eje x y al eje y
ax.set_xlabel('Etiquetas Eje X')
ax.set_ylabel('Similitud del Coseno KeyBERT')

# Muestra el gráfico
plt.show()

# Calcula el promedio de los valores en la columna "nombre_de_la_columna"
promedio = df['similarity_KeyBERT'].mean()

# Imprime el promedio
print("El promedio es:", promedio)

# Crea una figura y un eje
fig, ax = plt.subplots()

# Crea una gráfica de barras de la columna de similitud del coseno
ax.bar(df.index, df['similarity_GPT'], color='seagreen')

# Calcula el promedio de los valores en la columna 'similarity_yake'
promedio = df['similarity_GPT'].mean()

# Agrega una línea en el valor del promedio
ax.axhline(y=promedio, color='r', linestyle='-')

# Agrega etiquetas al eje x y al eje y
ax.set_xlabel('Etiquetas Eje X')
ax.set_ylabel('Similitud del Coseno GPT-3')

# Muestra el gráfico
plt.show()

# Calcula el promedio de los valores en la columna "nombre_de_la_columna"
promedio = df['similarity_GPT'].mean()

# Imprime el promedio
print("El promedio es:", promedio)

#import seaborn as sns


# Creamos un DataFrame que contenga solo las columnas de las características y la similitud del coseno
#df_cosine_similarity = df[['Author Keywords', 'Yake', 'similarity_yake']]

# Convertimos el DataFrame en una tabla pivot para poder crear un mapa de calor
#df_pivot = df_cosine_similarity.pivot(index='Author Keywords', columns='Yake', values='similarity_yake')

# Creamos el mapa de calor usando la librería Seaborn
#sns.heatmap(df_pivot, cmap='coolwarm')

# Añadimos un título
#plt.title('Similitud del coseno entre pares de características')

# Mostramos el gráfico
#plt.show()

# Creamos el gráfico de dispersión con los valores de similitud del coseno y las características que deseamos comparar
#plt.scatter(df['Author Keywords'], df['Yake'], c=df['similarity_yake'])

# Agregamos una barra de colores para identificar el valor de similitud del coseno
#plt.colorbar()

# Añadimos etiquetas a los ejes
#plt.xlabel('Característica 1')
#plt.ylabel('Característica 2')
#plt.title('Similitud del coseno entre características 1 y 2')

# Mostramos el gráfico
#plt.show()